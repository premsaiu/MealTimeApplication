/*
 * Created on 24 Mar 2016 ( Time 07:53:30 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.mealtime.dao.impl.spring;

import java.sql.ResultSet;
import java.sql.SQLException;

import com.mealtime.bean.ScheduleEnquiry;
import com.mealtime.dao.ScheduleEnquiryDAO;
import com.mealtime.dao.impl.spring.commons.GenericDAO;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

/**
 * ScheduleEnquiry DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
@Repository
public class ScheduleEnquiryDAOImplSpring extends GenericDAO<ScheduleEnquiry> implements ScheduleEnquiryDAO {

	private final static String SQL_SELECT = 
		"select enquiry_id, user_id, schedule_date_time, mobile_number, name, address, created_date, updated_date, created_by, updated_by, status, is_active, version from schedule_enquiry where enquiry_id = ?";

	// NB : This entity has an auto-incremented primary key : "enquiry_id"
	private final static String AUTO_INCREMENTED_COLUMN = "enquiry_id";

	private final static int[] SQL_INSERT_TYPES = new int[] {
			java.sql.Types.VARCHAR ,  // "user_id" : VARCHAR(7) - java.lang.String
			java.sql.Types.TIMESTAMP ,  // "schedule_date_time" : DATETIME - java.util.Date
			java.sql.Types.VARCHAR ,  // "mobile_number" : VARCHAR(255) - java.lang.String
			java.sql.Types.VARCHAR ,  // "name" : VARCHAR(255) - java.lang.String
			java.sql.Types.VARCHAR ,  // "address" : VARCHAR(255) - java.lang.String
			java.sql.Types.DATE ,  // "created_date" : DATE - java.util.Date
			java.sql.Types.DATE ,  // "updated_date" : DATE - java.util.Date
			java.sql.Types.VARCHAR ,  // "created_by" : VARCHAR(255) - java.lang.String
			java.sql.Types.VARCHAR ,  // "updated_by" : VARCHAR(255) - java.lang.String
			java.sql.Types.VARCHAR ,  // "status" : VARCHAR(255) - java.lang.String
			java.sql.Types.VARCHAR ,  // "is_active" : VARCHAR(255) - java.lang.String
			java.sql.Types.INTEGER   // "version" : INT - java.lang.Integer
	};

	private final static String SQL_INSERT = 
		"insert into schedule_enquiry ( user_id, schedule_date_time, mobile_number, name, address, created_date, updated_date, created_by, updated_by, status, is_active, version ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )";

	private final static String SQL_UPDATE = 
		"update schedule_enquiry set user_id = ?, schedule_date_time = ?, mobile_number = ?, name = ?, address = ?, created_date = ?, updated_date = ?, created_by = ?, updated_by = ?, status = ?, is_active = ?, version = ? where enquiry_id = ?";

	private final static String SQL_DELETE = 
		"delete from schedule_enquiry where enquiry_id = ?";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from schedule_enquiry";

	private final static String SQL_COUNT = 
		"select count(*) from schedule_enquiry where enquiry_id = ?";

    //----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public ScheduleEnquiryDAOImplSpring() {
		super(AUTO_INCREMENTED_COLUMN, SQL_INSERT_TYPES);
	}

	//----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public ScheduleEnquiry find( Integer enquiryId ) {
		Object[] primaryKey = new Object[] { enquiryId };
		return super.doSelect(primaryKey);		
	}
	//----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public boolean load( ScheduleEnquiry scheduleEnquiry ) {
		return super.doSelect(scheduleEnquiry) ;
	}
	
    //----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public Integer insert(ScheduleEnquiry scheduleEnquiry) {
		Long key = super.doInsertAutoIncr(scheduleEnquiry);
		return key.intValue();
	}

    //----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public int update(ScheduleEnquiry scheduleEnquiry) {
		return super.doUpdate(scheduleEnquiry);
	}	

    //----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public int delete( Integer enquiryId ) {
		Object[] primaryKey = new Object[] { enquiryId };
		return super.doDelete(primaryKey);		
	}

    //----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public int delete( ScheduleEnquiry scheduleEnquiry ) {
		return super.doDelete(scheduleEnquiry);
	}

    //----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public boolean exists( Integer enquiryId ) {
		Object[] primaryKey = new Object[] { enquiryId };
		return super.doExists(primaryKey);
	}
    //----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public boolean exists( ScheduleEnquiry scheduleEnquiry ) {
		return super.doExists(scheduleEnquiry);
	}

    //----------------------------------------------------------------------
	/* (non-Javadoc)
	 * DAO interface implementation
	 */
	
	public long count() {
		return super.doCountAll();
	}

    //----------------------------------------------------------------------
	// Super class abstract methods implementation
    //----------------------------------------------------------------------
	
	protected String getSqlSelect() {
		return SQL_SELECT ;
	}
    //----------------------------------------------------------------------
	
	protected String getSqlInsert() {
		return SQL_INSERT ;
	}
    //----------------------------------------------------------------------
	
	protected String getSqlUpdate() {
		return SQL_UPDATE ;
	}
    //----------------------------------------------------------------------
	
	protected String getSqlDelete() {
		return SQL_DELETE ;
	}
    //----------------------------------------------------------------------
	
	protected String getSqlCount() {
		return SQL_COUNT ;
	}
    //----------------------------------------------------------------------
	
	protected String getSqlCountAll() {
		return SQL_COUNT_ALL ;
	}
	//----------------------------------------------------------------------
	
	protected Object[] getValuesForInsert(ScheduleEnquiry scheduleEnquiry)  {
		return new Object[] {
			//--- Returns PRIMARY KEY and DATA ( for SQL "SET x=?, y=?, ..." )
			// "enquiry_id" is auto-incremented => no set in insert		
			scheduleEnquiry.getUserId() , // "user_id" : java.lang.String
			scheduleEnquiry.getScheduleDateTime() , // "schedule_date_time" : java.util.Date
			scheduleEnquiry.getMobileNumber() , // "mobile_number" : java.lang.String
			scheduleEnquiry.getName() , // "name" : java.lang.String
			scheduleEnquiry.getAddress() , // "address" : java.lang.String
			scheduleEnquiry.getCreatedDate() , // "created_date" : java.util.Date
			scheduleEnquiry.getUpdatedDate() , // "updated_date" : java.util.Date
			scheduleEnquiry.getCreatedBy() , // "created_by" : java.lang.String
			scheduleEnquiry.getUpdatedBy() , // "updated_by" : java.lang.String
			scheduleEnquiry.getStatus() , // "status" : java.lang.String
			scheduleEnquiry.getIsActive() , // "is_active" : java.lang.String
			scheduleEnquiry.getVersion()  // "version" : java.lang.Integer
		};
	}
    //----------------------------------------------------------------------
	
	protected Object[] getValuesForUpdate(ScheduleEnquiry scheduleEnquiry) {
		return new Object[] {		
			//--- Returns DATA first ( for SQL "SET x=?, y=?, ..." )
			scheduleEnquiry.getUserId(), // "user_id" : java.lang.String
			scheduleEnquiry.getScheduleDateTime(), // "schedule_date_time" : java.util.Date
			scheduleEnquiry.getMobileNumber(), // "mobile_number" : java.lang.String
			scheduleEnquiry.getName(), // "name" : java.lang.String
			scheduleEnquiry.getAddress(), // "address" : java.lang.String
			scheduleEnquiry.getCreatedDate(), // "created_date" : java.util.Date
			scheduleEnquiry.getUpdatedDate(), // "updated_date" : java.util.Date
			scheduleEnquiry.getCreatedBy(), // "created_by" : java.lang.String
			scheduleEnquiry.getUpdatedBy(), // "updated_by" : java.lang.String
			scheduleEnquiry.getStatus(), // "status" : java.lang.String
			scheduleEnquiry.getIsActive(), // "is_active" : java.lang.String
			scheduleEnquiry.getVersion(), // "version" : java.lang.Integer
			//--- Returns PRIMARY KEY at the end ( for SQL "WHERE key=?, ..." )
			scheduleEnquiry.getEnquiryId()  // "enquiry_id" : java.lang.Integer
		};
	}
	//----------------------------------------------------------------------
	
	protected Object[] getValuesForPrimaryKey(ScheduleEnquiry scheduleEnquiry)  {
		return new Object[] {
			//--- Returns PRIMARY KEY values ( for SQL "WHERE key=?, ..." )
			scheduleEnquiry.getEnquiryId()  // "enquiry_id" : java.lang.Integer
		};
	}
	//----------------------------------------------------------------------
	
	protected RowMapper<ScheduleEnquiry> getRowMapper(ScheduleEnquiry o)  {
		//--- RowMapper to populate the given bean instance
		return new ScheduleEnquiryRowMapper(o) ;
	}
	//----------------------------------------------------------------------
	
	protected RowMapper<ScheduleEnquiry> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		return new ScheduleEnquiryRowMapper( new ScheduleEnquiry() ) ;
	}

    //----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param scheduleEnquiry
	 * @throws SQLException
	 */
	private void populateBean(ResultSet rs, ScheduleEnquiry scheduleEnquiry) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		scheduleEnquiry.setEnquiryId(rs.getInt("enquiry_id")); // java.lang.Integer
		if ( rs.wasNull() ) { scheduleEnquiry.setEnquiryId(null); }; // not primitive number => keep null value if any
		scheduleEnquiry.setUserId(rs.getString("user_id")); // java.lang.String
		scheduleEnquiry.setScheduleDateTime(rs.getTimestamp("schedule_date_time")); // java.util.Date
		scheduleEnquiry.setMobileNumber(rs.getString("mobile_number")); // java.lang.String
		scheduleEnquiry.setName(rs.getString("name")); // java.lang.String
		scheduleEnquiry.setAddress(rs.getString("address")); // java.lang.String
		scheduleEnquiry.setCreatedDate(rs.getDate("created_date")); // java.util.Date
		scheduleEnquiry.setUpdatedDate(rs.getDate("updated_date")); // java.util.Date
		scheduleEnquiry.setCreatedBy(rs.getString("created_by")); // java.lang.String
		scheduleEnquiry.setUpdatedBy(rs.getString("updated_by")); // java.lang.String
		scheduleEnquiry.setStatus(rs.getString("status")); // java.lang.String
		scheduleEnquiry.setIsActive(rs.getString("is_active")); // java.lang.String
		scheduleEnquiry.setVersion(rs.getInt("version")); // java.lang.Integer
		if ( rs.wasNull() ) { scheduleEnquiry.setVersion(null); }; // not primitive number => keep null value if any
	}

    //----------------------------------------------------------------------
	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	private class ScheduleEnquiryRowMapper implements RowMapper<ScheduleEnquiry> {

		/**
		 * The bean instance that will be populated from the ResultSet
		 */
		private final ScheduleEnquiry bean ;
		
		/**
		 * Constructor
		 * @param bean the bean to be populated 
		 */
		ScheduleEnquiryRowMapper(ScheduleEnquiry bean) {
			this.bean = bean ;
		}
		
		
		public ScheduleEnquiry mapRow(ResultSet rs, int rowNum) throws SQLException {
			populateBean(rs, this.bean);
			return this.bean;
		}
	}
}
