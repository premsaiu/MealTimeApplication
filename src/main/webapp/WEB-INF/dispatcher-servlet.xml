<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:mvc="http://www.springframework.org/schema/mvc" 
xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/jdbc 
http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">

	<context:component-scan base-package="com.mealtime" />
	
	<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         <!-- setting maximum upload size to 10MB-->
        <property name="maxUploadSize" value="10485760" />
 
    </bean>

	<!-- <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean> -->

	<mvc:resources mapping="/views/users/**" location="/views/users/" />
	 <mvc:resources mapping="/views/admin/**" location="/views/admin/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/images/**" location="file:${catalina.home}/MealTime_User_Images/" />
	<mvc:annotation-driven />
	
	<mvc:interceptors>
    <bean id="webContentInterceptor" 
          class="org.springframework.web.servlet.mvc.WebContentInterceptor">
        <property name="cacheSeconds" value="0"/>
        <property name="useExpiresHeader" value="true"/>
        <property name="useCacheControlHeader" value="true"/>
        <property name="useCacheControlNoStore" value="true"/>
    </bean>
</mvc:interceptors>
	
	<!-- DriverManagerDataSource : Spring simplest implementation of a DataSource (doesnï¿½??t support database connection pooling)-->
	
	<bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"  value="${jdbc.driverClassName}" />
		<property name="url"              value="${jdbc.url}" />
		<property name="username"         value="${jdbc.username}" />
		<property name="password"         value="${jdbc.password}" />
	</bean>
	

	<!-- Apache DBCP connection pool -->
	<!-- <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"  value="${jdbc.driverClassName}" />
		<property name="url"              value="${jdbc.url}" />
		<property name="username"         value="${jdbc.username}" />
		<property name="password"         value="${jdbc.password}" />
	</bean> -->

	<!-- The properties file containing the values for the JDBC datasource-->	
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- <context:property-placeholder location="classpath:sms.properties"/> -->
	
	<!-- 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="datasource" />
	</bean>
	 -->
	 
	<!-- JNDI DataSource -->
	<!-- 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName"> 
			<value>java:comp/env/jdbc/demodatasource</value> 
		</property> 
	</bean> 
	 -->
	
	<!-- The packages where to search the DAO implementation -->
	<context:component-scan base-package="com.mealtime.dao.commons, com.mealtime.dao.impl.spring"/>
	<context:annotation-config/>
	
	<!-- Production implementation of the JavaMailSender interface, supporting 
		both JavaMail MimeMessages and Spring SimpleMailMessages -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	
		<!-- Gmail Server Configurations -->
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" /> 
		<property name="username" value="Dhanpalbharath456@gmail.com"/>
		<property name="password" value="" />
<!-- 		 <property name="host" value="localhost" /> -->
<!-- 		<property name="port" value="25" /> -->

	<!-- MealTime Server Configurations -->
		<!-- <property name="host" value="ns1.mealtime.co.in" />
		<property name="port" value="465" /> 
		<property name="username" value="info@mealtime.co.in" />
		<property name="password" value="Info@mealtime" /> -->
 
		<!-- The name of the property, following JavaBean naming conventions -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.enable">false</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
</beans>